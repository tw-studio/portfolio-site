{
  "name": "portfolio-site",
  "version": "0.0.0",
  "description": "",
  "license": "UNLICENSED",
  "private": true,
  "scripts": {
    "build": "pnpm build:all",
    "build:all": "pnpm clean:msw && pnpm build:lockpage && pnpm build:main",
    "build:all:PR": "pnpm clean:msw && pnpm build:lockpage:PR && pnpm build:main:PR",
    "build:all:dev": "pnpm build:lockpage:dev && pnpm build:main:dev",
    "build:all:prod:local": "pnpm build:lockpage:prod:local && pnpm build:main:prod:local",
    "build:all:test": "pnpm build:lockpage:test && pnpm build:main:test",
    "build:local": "pnpm build:lockpage:local && pnpm build",
    "build:lockpage": "pnpm prebuild:lockpage && $npm_package_env_PROD timeout --foreground --preserve-status --kill-after=120s 120s next build lockpage && pnpm lockpage:fix",
    "build:lockpage:PR": "pnpm prebuild:lockpage && $npm_package_env_TEST_PR next build lockpage && pnpm lockpage:fix:PR",
    "build:lockpage:dev": "pnpm prebuild:lockpage && $npm_package_env_DEV next build lockpage && pnpm lockpage:fix:dev",
    "build:lockpage:local": "pnpm prebuild:lockpage && $npm_package_env_LOCAL next build lockpage && pnpm lockpage:fix:local",
    "build:lockpage:prod:local": "pnpm prebuild:lockpage && $npm_package_env_PROD_LOCAL timeout --foreground --preserve-status --kill-after=120s 120s next build lockpage && pnpm lockpage:fix:prod:local",
    "build:lockpage:test": "pnpm prebuild:lockpage && $npm_package_env_TEST next build lockpage && pnpm lockpage:fix:test",
    "build:main": "pnpm prebuild:main && $npm_package_env_PROD timeout --foreground --preserve-status --kill-after=120s 120s next build",
    "build:main:PR": "pnpm prebuild:main && $npm_package_env_TEST_PR next build",
    "build:main:dev": "pnpm prebuild:main && $npm_package_env_DEV next build",
    "build:main:prod:local": "pnpm prebuild:main && $npm_package_env_PROD_LOCAL timeout --foreground --preserve-status --kill-after=120s 120s next build",
    "build:main:test": "pnpm prebuild:main && $npm_package_env_TEST next build",
    "build:test": "pnpm prebuild && $npm_package_env_TEST next build",
    "clean": "pnpm clean:all",
    "clean:all": "pnpm clean:lockpage && pnpm clean:main && pnpm clean:msw",
    "clean:lockpage": "rm -rf lockpage/.next lockpage/out lockpage/export",
    "clean:main": "rm -rf .next",
    "clean:msw": "rm -f public/mockServiceWorker.js",
    "db:PR:setup": "$npm_package_env_TEST_PR ./scripts/db-dev-setup.sh",
    "db:dev:confirm": "$npm_package_env_DEV ./scripts/confirm-db-dev.sh",
    "db:dev:confirm:test": "$npm_package_env_TEST ./scripts/confirm-db-dev.sh",
    "db:dev:connect:psql": "$npm_package_env_DEV ./scripts/db-dev-connect-psql.sh",
    "db:dev:flyway": "$npm_package_env_DEV docker-compose -f db/docker/docker-compose-dev-fw-pg.yml run --rm flyway -configFiles=/flyway/conf/flyway.config",
    "db:dev:flyway:info": "pnpm db:dev:flyway info",
    "db:dev:flyway:migrate": "pnpm db:dev:flyway migrate",
    "db:dev:migrate": "pnpm db:dev:flyway migrate",
    "db:dev:setup": "$npm_package_env_DEV ./scripts/db-dev-setup.sh",
    "db:prod:confirm": "$npm_package_env_PROD ./scripts/confirm-db-prod.sh",
    "db:prod:connect:psql": "$npm_package_env_PROD ./scripts/db-prod-connect-psql.sh",
    "db:prod:flyway": "$npm_package_env_PROD docker-compose -f db/docker/docker-compose-prod-flyway.yml run --rm flyway -configFiles=/flyway/conf/flyway.config",
    "db:prod:flyway:migrate": "$npm_package_env_PROD docker-compose -f db/docker/docker-compose-prod-flyway.yml run --rm flyway -configFiles=/flyway/conf/flyway.config migrate",
    "db:prod:flyway:up": "$npm_package_env_PROD docker-compose -f db/docker/docker-compose-prod-flyway.yml up -d",
    "db:prod:fwd:psql": "pnpm secrets:fwd:rds && pnpm db:prod:connect:psql",
    "db:prod:fwd:rds": "pnpm secrets:fwd:rds && $npm_package_env_PROD ./scripts/db-start-fwd-rds.sh",
    "db:prod:migrate": "pnpm db:prod:flyway:migrate",
    "dev": "pnpm dev:main",
    "dev:guest": "pnpm dev:setup:all && ACTIVE_INDEX=1 $npm_package_env_DEV_HOT next dev -p 4000",
    "dev:lockpage": "pnpm dev:setup:base && $npm_package_env_DEV_HOT next dev lockpage -p 4100",
    "dev:main": "pnpm dev:setup:all && ACTIVE_INDEX=0 $npm_package_env_DEV_HOT next dev -p 4000",
    "dev:main:nocheck": "pnpm dev:setup:base && ACTIVE_INDEX=0 $npm_package_env_DEV_HOT next dev -p 4000",
    "dev:setup": "pnpm dev:setup:first",
    "dev:setup:all": "pnpm secrets:confirm && pnpm db:dev:setup",
    "dev:setup:base": "pnpm secrets:confirm",
    "dev:setup:first": "pnpm install && pnpm secrets:confirm && ./scripts/post-dev-setup-messages.sh",
    "gencerts": "mkdir -p server/.localcerts && openssl req -x509 -sha256 -days 3650 -nodes -newkey rsa:4096 -keyout server/.localcerts/localhost.key -out server/.localcerts/localhost.crt -subj '/CN=localhost'",
    "https:local:setup": "$npm_package_env_DEV scripts/https-local-setup.sh",
    "jest": "pnpm jest:all",
    "jest:P1": "pnpm server:confirm && pnpm db:dev:confirm:test && pnpm jest:setup && $npm_package_env_TEST $(pnpm bin)/jest $npm_package_config_jest_P1",
    "jest:all": "pnpm server:confirm && pnpm db:dev:confirm:test && pnpm jest:setup && $npm_package_env_TEST $(pnpm bin)/jest $npm_package_config_jest_all",
    "jest:all:PR": "pnpm server:confirm && pnpm db:dev:confirm:test && pnpm jest:setup && $npm_package_env_TEST_PR $(pnpm bin)/jest $npm_package_config_jest_all",
    "jest:all:nodb": "pnpm server:confirm && pnpm jest:setup && $npm_package_env_TEST $(pnpm bin)/jest $npm_package_config_jest_all_no_db",
    "jest:all:noserver": "pnpm db:dev:confirm:test && pnpm jest:setup && $npm_package_env_TEST $(pnpm bin)/jest $npm_package_config_jest_all_no_server",
    "jest:all:noservernodb": "pnpm jest:setup && $npm_package_env_TEST $(pnpm bin)/jest $npm_package_config_jest_all_no_server_no_db",
    "jest:all:watch": "pnpm server:confirm && pnpm db:dev:confirm:test && pnpm jest:setup && $npm_package_env_TEST $(pnpm bin)/jest $npm_package_config_jest_all --watch",
    "jest:app": "pnpm jest:setup && $npm_package_env_TEST $(pnpm bin)/jest $npm_package_config_jest_app",
    "jest:db": "pnpm db:dev:confirm:test && $npm_package_env_TEST $(pnpm bin)/jest $npm_package_config_jest_db",
    "jest:flags": "pnpm jest:flags:all",
    "jest:flags:all": "$npm_package_env_PROD $(pnpm bin)/jest $npm_package_config_jest_flags && $npm_package_env_DEV $(pnpm bin)/jest $npm_package_config_jest_flags && $npm_package_env_TEST $(pnpm bin)/jest $npm_package_config_jest_flags",
    "jest:flags:dev": "$npm_package_env_DEV $(pnpm bin)/jest $npm_package_config_jest_flags",
    "jest:flags:noprod": "$npm_package_env_DEV $(pnpm bin)/jest $npm_package_config_jest_flags && $npm_package_env_TEST $(pnpm bin)/jest $npm_package_config_jest_flags",
    "jest:lockpage": "pnpm jest:setup && $npm_package_env_TEST $(pnpm bin)/jest $npm_package_config_jest_lockpage",
    "jest:models": "pnpm db:dev:confirm:test && $npm_package_env_TEST $(pnpm bin)/jest $npm_package_config_jest_models",
    "jest:only": "pnpm jest:setup && $npm_package_env_TEST $(pnpm bin)/jest $npm_package_config_jest_only",
    "jest:server": "pnpm server:confirm && pnpm jest:setup && $npm_package_env_TEST $(pnpm bin)/jest $npm_package_config_jest_server",
    "jest:setup": "$npm_package_env_TEST ./scripts/setup-jest.sh",
    "jest:utils": "$npm_package_env_TEST $(pnpm bin)/jest $npm_package_config_jest_utils",
    "lint": "pnpm lint:main",
    "lint:all": "timeout --foreground --preserve-status --kill-after=60s 60s next lint --dir src --dir server --dir lockpage/src",
    "lint:main": "timeout --foreground --preserve-status --kill-after=60s 60s next lint --dir src --dir server --dir resources --dir scripts --dir types --dir utils",
    "lint:lockpage": "timeout --foreground --preserve-status --kill-after=60s 60s next lint --dir lockpage/src",
    "lockpage:export": "$npm_package_env_PROD next export",
    "lockpage:fix": "$npm_package_env_PROD node ./scripts/fix-lockpage-export.node.js",
    "lockpage:fix:PR": "$npm_package_env_TEST_PR node ./scripts/fix-lockpage-export.node.js",
    "lockpage:fix:dev": "$npm_package_env_DEV node ./scripts/fix-lockpage-export.node.js",
    "lockpage:fix:local": "$npm_package_env_LOCAL node ./scripts/fix-lockpage-export.node.js",
    "lockpage:fix:prod:local": "$npm_package_env_PROD_LOCAL node ./scripts/fix-lockpage-export.node.js",
    "lockpage:fix:test": "$npm_package_env_TEST node ./scripts/fix-lockpage-export.node.js",
    "prebuild": "pnpm prebuild:all",
    "prebuild:all": "pnpm secrets:confirm && pnpm clean:all && pnpm lint:all",
    "prebuild:lockpage": "pnpm secrets:confirm && pnpm clean:lockpage && pnpm lint:lockpage",
    "prebuild:main": "pnpm secrets:confirm && pnpm clean:main && pnpm lint:main",
    "secrets:PR": "$npm_package_env_COMMON node ./scripts/populate-secrets-test-gh.node.js",
    "secrets:confirm": "./scripts/confirm-secrets.sh",
    "secrets:prod": "$npm_package_env_COMMON node ./scripts/populate-secrets-prod.node.js",
    "secrets:fwd:rds": "$npm_package_env_COMMON node ./scripts/populate-secrets-fwd-rds.node.js",
    "serve": "pnpm serve:prod",
    "serve:dev": "pnpm install && pnpm dev:setup:all && pnpm build:all:dev && pnpm start:dev",
    "serve:local": "pnpm install && pnpm build:local && pnpm start:local",
    "serve:prod": "pnpm install && pnpm store prune && pnpm build:all && pnpm start",
    "serve:prod:local": "pnpm install && pnpm store prune && pnpm build:all:prod:local && pnpm start:prod:local",
    "serve:test": "pnpm install && pnpm build:all:test && pnpm start:test",
    "server:confirm": "./scripts/confirm-server-running.sh",
    "start": "pnpm start:prod",
    "start:PR": "pnpm stop:silent; $(pnpm bin)/tsc -p tsconfig.server.json && ./scripts/fix-server-relative-paths.sh && NODE_ENV=production pm2 start server/.tsc/server --attach --log-date-format \"YYYY-MM-DD HH:mm:ss Z\" --interpreter env-cmd --interpreter-args '-f ./.env/test-pr.env.js node'",
    "start:PR:OLD": "pm2 start server --attach --interpreter env-cmd --interpreter-args '-f ./.env/test-pr.env.js node'",
    "start:dev": "pnpm start:dev:js",
    "start:dev:js": "pnpm stop:silent; pnpm https:local:setup && $(pnpm bin)/tsc -p tsconfig.server.json && ./scripts/fix-server-relative-paths.sh && NODE_ENV=development pm2 start server/.tsc/server --attach --log-date-format \"YYYY-MM-DD HH:mm:ss Z\" --interpreter env-cmd --interpreter-args '-f ./.env/development.env.js node' --ignore-watch '*.md'",
    "start:dev:js:works": "pnpm stop:silent; pnpm https:local:setup && $(pnpm bin)/tsc -p tsconfig.server.json && ./scripts/fix-server-relative-paths.sh && pm2 start server/.tsc/server --attach --log-date-format \"YYYY-MM-DD HH:mm:ss Z\" --interpreter env-cmd --interpreter-args '-f ./.env/development.env.js node' --ignore-watch '*.md'",
    "start:dev:oldjs": "pnpm https:local:setup && pnpm stop:silent; pm2 start server --watch --attach --interpreter env-cmd --interpreter-args '-f ./.env/development.env.js node' --ignore-watch '*.md'",
    "start:dev:ts": "pnpm stop:silent; pnpm https:local:setup && NODE_ENV=production TS_NODE_COMPILER_OPTIONS='{\"module\":\"commonjs\"}' pm2 start server/index.ts --name server --attach --log-date-format \"YYYY-MM-DD HH:mm:ss Z\" --interpreter env-cmd --interpreter-args '-f ./.env/development.env.js ts-node --project tsconfig.server.json' --ignore-watch '*.md'",
    "start:dev:ts:node": "pnpm stop:silent; pnpm https:local:setup && TS_NODE_COMPILER_OPTIONS='{\"module\":\"commonjs\"}' pm2 start server/index.ts --name server --attach --log-date-format \"YYYY-MM-DD HH:mm:ss Z\" --interpreter env-cmd --interpreter-args '-f ./.env/development.env.js node --loader ts-node/esm --no-warnings' --ignore-watch '*.md'",
    "start:dev:ts:node:works": "pnpm stop:silent; pnpm https:local:setup && TS_NODE_COMPILER_OPTIONS='{\"module\":\"commonjs\"}' pm2 start server/index.ts --name server --attach --log-date-format \"YYYY-MM-DD HH:mm:ss Z\" --interpreter env-cmd --interpreter-args '-f ./.env/development.env.js node --experimental-specifier-resolution=node --loader ts-node/esm --no-warnings' --ignore-watch '*.md'",
    "start:local": "pnpm stop:silent; pm2 start server --watch --attach --log-date-format \"YYYY-MM-DD HH:mm:ss Z\" --interpreter env-cmd --interpreter-args '-f ./.env/.local.env.js node'",
    "start:prod": "pnpm stop:silent; $(pnpm bin)/tsc -p tsconfig.server.json && ./scripts/fix-server-relative-paths.sh && NODE_ENV=production pm2 start server/.tsc/server --log-date-format \"YYYY-MM-DD HH:mm:ss Z\" --interpreter env-cmd --interpreter-args '-f ./.env/production.env.js node'",
    "start:prod:local": "pnpm stop:silent; $(pnpm bin)/tsc -p tsconfig.server.json && ./scripts/fix-server-relative-paths.sh && NODE_ENV=production pm2 start server/.tsc/server --attach --log-date-format \"YYYY-MM-DD HH:mm:ss Z\" --interpreter env-cmd --interpreter-args '-f ./.env/production-local.env.js node' --ignore-watch '*.md'",
    "start:prod:oldjs": "pnpm stop:silent; pm2 start server --interpreter env-cmd --interpreter-args '-f ./.env/production.env.js node'",
    "start:next:prod": "$npm_package_env_PROD next start",
    "stop": "pnpm stop:server",
    "stop:server": "pm2 delete server || :",
    "stop:server:silent": "pm2 delete server --silent || :",
    "stop:silent": "pnpm stop:server:silent",
    "testcafe": "pnpm testcafe:main:dev",
    "testcafe:guest": "ACTIVE_INDEX=1 $npm_package_env_TEST $(pnpm bin)/testcafe $npm_package_config_testcafe_guest",
    "testcafe:guest:dev": "ACTIVE_INDEX=1 $npm_package_env_TEST_HOT $(pnpm bin)/testcafe $npm_package_config_testcafe_guest",
    "testcafe:main": "ACTIVE_INDEX=0 $npm_package_env_TEST $(pnpm bin)/testcafe $npm_package_config_testcafe_main",
    "testcafe:main:dev": "ACTIVE_INDEX=0 $npm_package_env_TEST_HOT $(pnpm bin)/testcafe $npm_package_config_testcafe_main",
    "testcafe:main:prod": "ACTIVE_INDEX=0 $npm_package_env_TEST $(pnpm bin)/testcafe $npm_package_config_testcafe_main",
    "testcafe:main:start": "pnpm start:test && { ACTIVE_INDEX=0 $npm_package_env_TEST $(pnpm bin)/testcafe $npm_package_config_testcafe_main; pnpm stop; }",
    "testcafe:start": "pnpm start:test && $npm_package_env_TEST $(pnpm bin)/testcafe"
  },
  "config": {
    "jest_P1": "--config=config/jest/all.jest.config.js --t=\\[P1\\]",
    "jest_all": "--config=config/jest/all.jest.config.js",
    "jest_all_no_db": "--config=config/jest/all-no-db.jest.config.js",
    "jest_all_no_server": "--config=config/jest/all-no-server.jest.config.js",
    "jest_all_no_server_no_db": "--config=config/jest/all-no-server-no-db.jest.config.js",
    "jest_app": "--config=config/jest/app.jest.config.js",
    "jest_db": "--config=config/jest/db.jest.config.js",
    "jest_flags": "--config=config/jest/flags.jest.config.js",
    "jest_guest": "--config=config/jest/guest.jest.config.js",
    "jest_lockpage": "--config=config/jest/lockpage.jest.config.js",
    "jest_main": "--config=config/jest/main.jest.config.js",
    "jest_models": "--config=config/jest/models.jest.config.js",
    "jest_only": "--config=config/jest/only.jest.config.js",
    "jest_server": "--config=config/jest/server.jest.config.js",
    "jest_utils": "--config=config/jest/utils.jest.config.js",
    "testcafe_guest": "--config-file=config/testcafe/guest.testcaferc.js",
    "testcafe_main": "--config-file=config/testcafe/main.testcaferc.js"
  },
  "env": {
    "COMMON": "env-cmd -f ./.env/common.env.js",
    "DEV": "env-cmd -f ./.env/development.env.js",
    "DEV_HOT": "env-cmd -f ./.env/development-hot.env.js",
    "LOCAL": "env-cmd -f ./.env/.local.env.js",
    "PROD": "env-cmd -f ./.env/production.env.js",
    "PROD_LOCAL": "env-cmd -f ./.env/production-local.env.js",
    "TEST": "env-cmd -f ./.env/test.env.js",
    "TEST_HOT": "env-cmd -f ./.env/test-hot.env.js",
    "TEST_PR": "env-cmd -f ./.env/test-pr.env.js",
    "TS": "TS_NODE_COMPILER_OPTIONS='{\"module\":\"commonjs\"}'"
  },
  "dependencies": {
    "@aws-sdk/client-ssm": "3.329.0",
    "@babel/runtime": "7.21.5",
    "@fontsource/inter": "4.5.15",
    "@fontsource/raleway": "4.5.12",
    "@radix-ui/colors": "0.1.8",
    "@radix-ui/react-dialog": "1.0.3",
    "@radix-ui/react-dropdown-menu": "2.0.4",
    "@radix-ui/react-icons": "1.3.0",
    "@radix-ui/react-tabs": "1.0.3",
    "@stitches/react": "1.2.8",
    "@types/cookie-parser": "1.4.3",
    "@types/express": "4.17.17",
    "@types/morgan": "1.9.4",
    "@types/superagent": "4.1.17",
    "axios": "1.4.0",
    "cookie-parser": "1.4.6",
    "crypto-browserify": "3.12.0",
    "endent": "=1.4.1",
    "entities": "4.5.0",
    "env-cmd": "10.1.0",
    "express": "4.18.2",
    "express-async-handler": "1.2.0",
    "express-sslify": "1.2.0",
    "helmet": "7.0.0",
    "jose": "4.14.4",
    "jsonwebtoken": "9.0.0",
    "knex": "2.4.2",
    "luxon": "3.3.0",
    "module-alias": "2.2.2",
    "morgan": "1.10.0",
    "next": "13.4.4",
    "objection": "3.0.1",
    "pg": "8.11.0",
    "prop-types": "15.8.1",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "stream-browserify": "3.0.0",
    "superagent": "8.0.9",
    "ts-loader": "9.4.2",
    "ts-node": "10.9.1",
    "typescript": "5.0.4",
    "webpack": "5.82.1"
  },
  "devDependencies": {
    "@babel/core": "7.21.8",
    "@babel/eslint-parser": "7.21.8",
    "@babel/plugin-transform-react-jsx": "7.21.5",
    "@babel/plugin-transform-runtime": "7.21.4",
    "@babel/preset-env": "7.21.5",
    "@babel/preset-react": "7.18.6",
    "@next/eslint-plugin-next": "13.4.1",
    "@testing-library/jest-dom": "5.16.5",
    "@testing-library/react": "14.0.0",
    "@testing-library/testcafe": "5.0.0",
    "@testing-library/user-event": "14.4.3",
    "@types/jest": "29.5.1",
    "@types/node": "18.16.0",
    "@types/react": "18.2.5",
    "@types/react-dom": "18.2.3",
    "@typescript-eslint/eslint-plugin": "5.59.5",
    "@typescript-eslint/parser": "5.59.5",
    "babel-jest": "29.5.0",
    "cross-env": "7.0.3",
    "eslint": "8.40.0",
    "eslint-config-airbnb": "19.0.4",
    "eslint-config-next": "13.4.1",
    "eslint-import-resolver-alias": "1.1.2",
    "eslint-plugin-import": "2.27.5",
    "eslint-plugin-jsx-a11y": "6.7.1",
    "eslint-plugin-prettier": "4.2.1",
    "jest": "29.5.0",
    "jest-environment-jsdom": "29.5.0",
    "jest-extended": "3.2.4",
    "jest-transform-css": "6.0.1",
    "msw": "1.2.1",
    "nodemon": "2.0.22",
    "snapshot-diff": "0.10.0",
    "stylelint-config-recommended": "12.0.0",
    "stylelint-config-styled-components": "0.1.1",
    "stylelint-processor-styled-components": "1.10.0",
    "supertest": "6.3.3",
    "testcafe": "2.5.1-rc.1",
    "testcafe-react-selectors": "5.0.2"
  },
  "_moduleAliases": {
    "@": ".",
    "@components": "src/components",
    "@db": "db",
    "@models": "models",
    "@resources": "resources",
    "@server": "server",
    "@src": "src",
    "@types": "types",
    "@utils": "utils"
  },
  "browser": {
    "crypto": false,
    "fs": false,
    "os": false,
    "path": false,
    "stream": false
  },
  "msw": {
    "workerDirectory": "public"
  }
}
